#BlueJ class context
comment0.target=Arrendador
comment0.text=\r\n\ Esta\ clase\ me\ define\ los\ limites\ y\ las\ funciones\ del\ arrendador,\ clasifica\r\n\ muestra\ y\ extrae\ con\ una\ serie\ de\ funciones\ para\ la\ maniobrabilidad\ \r\n\ del\ arrendador.\r\n\ \r\n\ @author\ (Edmonblack&&Cali)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=nombre\ contrase\u00F1a\ correo\ telefono\ genero
comment1.target=Arrendador(java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ java.lang.String)
comment1.text=\r\n\ Constructor\ donde\ muestra\ las\ variables\ y\ las\ inicializa,\ hereda\ de\ usuario\ \r\n
comment2.params=
comment2.target=java.util.ArrayList\ getInmueble()
comment2.text=\r\nDevuelve\ todos\ los\ cupos\ disponibles\ ya\ ingresados\ \r\n
comment3.params=c
comment3.target=void\ registrarCupo(Cupos)
comment3.text=\r\nregistra\ los\ inmuebles\ para\ as\u00ED\ ofrecerlos\ \r\n
comment4.params=i\ c
comment4.target=void\ registrarResidente(Arrendatario,\ Cupos)
comment4.text=\r\ninicia\ el\ proceso\ y\ la\ interaccion\ con\ el\ arrendatario,\ cambia\ la\ disponibilidad\r\ny\ registra\ al\ arrendatario\r\n
comment5.params=c
comment5.target=void\ eliminarResidente(Cupos)
comment5.text=\r\nElimima\ al\ residente,\ cambia\ el\ inquilino\ y\ la\ disponibilidad\ para\ que\ \r\nel\ cupo\ quede\ disponible\ otra\ vez\r\n
comment6.params=a\ c
comment6.target=void\ cambiarResidente(Arrendatario,\ Cupos)
comment6.text=\r\nse\ cambia\ al\ inquilino\ existente,\ pero\ sigue\ sin\ cambiarse\ la\ disponibilidad\ \r\n
comment7.params=img\ c
comment7.target=void\ agregarImagen(java.lang.String,\ Cupos)
comment7.text=\r\nse\ agrega\ la\ imagen\ del\ lugar\r\n
comment8.params=img\ c
comment8.target=void\ eliminarImagen(java.lang.String,\ Cupos)
comment8.text=\r\nSe\ elimina\ una\ imagen\ si\ existe\r\n
comment9.params=c
comment9.target=void\ eliminarCupo(Cupos)
comment9.text=\r\nse\ elimina\ un\ cupo\ si\ existe\r\n
numComments=10
